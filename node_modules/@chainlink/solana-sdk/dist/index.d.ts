/// <reference types="bn.js" />
import * as anchor from "@project-serum/anchor";
import { BN } from "@project-serum/anchor";
import { PublicKey } from "@solana/web3.js";
export declare const CHAINLINK_AGGREGATOR_PROGRAM_ID: anchor.web3.PublicKey;
export declare const CHAINLINK_STORE_PROGRAM_ID: anchor.web3.PublicKey;
export interface Round {
    feed: PublicKey;
    answer: BN;
    roundId: number;
    observationsTS: Date;
    slot: number;
}
export declare class OCR2Feed {
    readonly aggregatorProgram: anchor.Program;
    readonly provider: anchor.AnchorProvider;
    private _parser;
    constructor(aggregatorProgram: anchor.Program, provider: anchor.AnchorProvider);
    static load(programID?: PublicKey, provider?: anchor.AnchorProvider): Promise<OCR2Feed>;
    onRound(feed: PublicKey, callback: (round: Round) => void): number;
    removeListener(listener: number): Promise<void>;
    static parseLog(log: any): Round;
}
//# sourceMappingURL=index.d.ts.map